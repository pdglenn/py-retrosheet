from sqlalchemy import Table, Column, Integer, String, MetaData, ForeignKey
metadata = MetaData()

events = Table('events', metadata,
   Column('game_id', String),
    Column('away_team_id', String),
    Column('inn_ct', Integer),
    Column('bat_home_id', Integer),
    Column('outs_ct', Integer),
    Column('balls_ct', Integer),
    Column('strikes_ct', Integer),
    Column('pitch_seq_tx', String),
    Column('away_score_ct', Integer),
    Column('home_score_ct', Integer),
    Column('bat_id', String),
    Column('bat_hand_cd', String),
    Column('resp_bat_id', String),
    Column('bat_on_deck_id', String),
    Column('bat_in_hold_id', String),
    Column('resp_bat_hand_cd', String),
    Column('pit_id', String),
    Column('pit_hand_cd', String),
    Column('resp_pit_id', String),
    Column('resp_pit_hand_cd', String),
    Column('pos2_fld_id', String),
    Column('pos3_fld_id', String),
    Column('pos4_fld_id', String),
    Column('pos5_fld_id', String),
    Column('pos6_fld_id', String),
    Column('pos7_fld_id', String),
    Column('pos8_fld_id', String),
    Column('pos9_fld_id', String),
    Column('base1_run_id', String),
    Column('base2_run_id', String),
    Column('base3_run_id', String),
    Column('event_tx', String),
    Column('leadoff_fl', String),
    Column('ph_fl', String),
    Column('bat_fld_cd', Integer),
    Column('bat_lineup_id', Integer),
    Column('event_cd', Integer),
    Column('bat_event_fl', String),
    Column('ab_fl', String),
    Column('h_cd', Integer),
    Column('sh_fl', String),
    Column('sf_fl', String),
    Column('event_outs_ct', Integer),
    Column('dp_fl', String),
    Column('tp_fl', String),
    Column('rbi_ct', Integer),
    Column('wp_fl', String),
    Column('pb_fl', String),
    Column('fld_cd', Integer),
    Column('battedball_cd', String),
    Column('bunt_fl', String),
    Column('foul_fl', String),
    Column('battedball_loc_tx', String),
    Column('err_ct', Integer),
    Column('err1_fld_cd', Integer),
    Column('err1_cd', String),
    Column('err2_fld_cd', Integer),
    Column('err2_cd', String),
    Column('err3_fld_cd', Integer),
    Column('err3_cd', String),
    Column('bat_dest_id', Integer),
    Column('run1_dest_id', Integer),
    Column('run2_dest_id', Integer),
    Column('run3_dest_id', Integer),
    Column('bat_play_tx', String),
    Column('run1_play_tx', String),
    Column('run2_play_tx', String),
    Column('run3_play_tx', String),
    Column('run1_sb_fl', String),
    Column('run2_sb_fl', String),
    Column('run3_sb_fl', String),
    Column('run1_cs_fl', String),
    Column('run2_cs_fl', String),
    Column('run3_cs_fl', String),
    Column('run1_pk_fl', String),
    Column('run2_pk_fl', String),
    Column('run3_pk_fl', String),
    Column('run1_resp_pit_id', String),
    Column('run2_resp_pit_id', String),
    Column('run3_resp_pit_id', String),
    Column('game_new_fl', String),
    Column('game_end_fl', String),
    Column('pr_run1_fl', String),
    Column('pr_run2_fl', String),
    Column('pr_run3_fl', String),
    Column('removed_for_pr_run1_id', String),
    Column('removed_for_pr_run2_id', String),
    Column('removed_for_pr_run3_id', String),
    Column('removed_for_ph_bat_id', String),
    Column('removed_for_ph_bat_fld_cd', Integer),
    Column('po1_fld_cd', Integer),
    Column('po2_fld_cd', Integer),
    Column('po3_fld_cd', Integer),
    Column('ass1_fld_cd', Integer),
    Column('ass2_fld_cd', Integer),
    Column('ass3_fld_cd', Integer),
    Column('ass4_fld_cd', Integer),
    Column('ass5_fld_cd', Integer),
    Column('event_id', Integer),
    Column('home_team_id', String),
    Column('bat_team_id', String),
    Column('fld_team_id', String),
    Column('bat_last_id', Integer),
    Column('inn_new_fl', String),
    Column('inn_end_fl', String),
    Column('start_bat_score_ct', Integer),
    Column('start_fld_score_ct', Integer),
    Column('inn_runs_ct', Integer),
    Column('game_pa_ct', Integer),
    Column('inn_pa_ct', Integer),
    Column('pa_new_fl', String),
    Column('pa_trunc_fl', String),
    Column('start_bases_cd', Integer),
    Column('end_bases_cd', Integer),
    Column('bat_start_fl', String),
    Column('resp_bat_start_fl', String),
    Column('pit_start_fl', String),
    Column('resp_pit_start_fl', String),
    Column('run1_fld_cd', Integer),
    Column('run1_lineup_cd', Integer),
    Column('run1_origin_event_id', Integer),
    Column('run2_fld_cd', Integer),
    Column('run2_lineup_cd', Integer),
    Column('run2_origin_event_id', Integer),
    Column('run3_fld_cd', Integer),
    Column('run3_lineup_cd', Integer),
    Column('run3_origin_event_id', Integer),
    Column('run1_resp_cat_id', String),
    Column('run2_resp_cat_id', String),
    Column('run3_resp_cat_id', String),
    Column('pa_ball_ct', Integer),
    Column('pa_called_ball_ct', Integer),
    Column('pa_intent_ball_ct', Integer),
    Column('pa_pitchout_ball_ct', Integer),
    Column('pa_hitbatter_ball_ct', Integer),
    Column('pa_other_ball_ct', Integer),
    Column('pa_strike_ct', Integer),
    Column('pa_called_strike_ct', Integer),
    Column('pa_swingmiss_strike_ct', Integer),
    Column('pa_foul_strike_ct', Integer),
    Column('pa_inplay_strike_ct', Integer),
    Column('pa_other_strike_ct', Integer),
    Column('event_runs_ct', Integer),
    Column('fld_id', String),
    Column('base2_force_fl', String),
    Column('base3_force_fl', String),
    Column('base4_force_fl', String),
    Column('bat_safe_err_fl', String),
    Column('bat_fate_id', Integer),
    Column('run1_fate_id', Integer),
    Column('run2_fate_id', Integer),
    Column('run3_fate_id', Integer),
    Column('fate_runs_ct', Integer),
    Column('ass6_fld_cd', Integer),
    Column('ass7_fld_cd', Integer),
    Column('ass8_fld_cd', Integer),
    Column('ass9_fld_cd', Integer),
    Column('ass10_fld_cd', Integer),
    Column('unknown_out_exc_fl', String),
    Column('uncertain_play_exc_fl', String),
)

if __name__ == '__main__':
    from sqlalchemy import create_engine
    engine = create_engine('sqlite:///test_db')
    metadata.create_all(engine)

